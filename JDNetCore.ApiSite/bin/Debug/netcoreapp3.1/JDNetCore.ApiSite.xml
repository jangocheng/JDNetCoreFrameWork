<?xml version="1.0"?>
<doc>
    <assembly>
        <name>JDNetCore.ApiSite</name>
    </assembly>
    <members>
        <member name="T:JDNetCore.ApiSite.Admin.TestController">
            <summary>
            测试  
            </summary>
        </member>
        <member name="M:JDNetCore.ApiSite.Admin.TestController.#ctor(JDNetCore.Repository.Interface.ITestRepository)">
            <summary>
            构造...
            </summary>
        </member>
        <member name="M:JDNetCore.ApiSite.Admin.TestController.DeleteAsync(System.String)">
            <summary>
            按主键删除
            </summary>
            <param name="id">主键</param>
            <returns></returns>
        </member>
        <member name="M:JDNetCore.ApiSite.Admin.TestController.DeleteAllAsync(System.String[])">
            <summary>
            按主键删除多个
            </summary>
            <param name="ids">主键数组</param>
            <returns></returns>
        </member>
        <member name="M:JDNetCore.ApiSite.Admin.TestController.GetAsync(System.String)">
            <summary>
            按主键获取单条
            </summary>
            <param name="id">主键</param>
            <returns></returns>
        </member>
        <member name="M:JDNetCore.ApiSite.Admin.TestController.GetsAsync(JDNetCore.Model.VO.In.BQM)">
            <summary>
            按条件获取多条
            </summary>
            <param name="query">通用查询条件</param>
            <returns></returns>
        </member>
        <member name="M:JDNetCore.ApiSite.Admin.TestController.PatchAsync(System.String,Microsoft.AspNetCore.JsonPatch.JsonPatchDocument{JDNetCore.Entity.Test})">
            <summary>
            部分更新(暂未实现)
            </summary>
            <param name="id">主键</param>
            <param name="data">JsonPatch对象</param>
            <returns></returns>
        </member>
        <member name="M:JDNetCore.ApiSite.Admin.TestController.PostAsync(JDNetCore.Entity.Test)">
            <summary>
            添加
            </summary>
            <param name="data">添加对象</param>
            <returns></returns>
        </member>
        <member name="M:JDNetCore.ApiSite.Admin.TestController.PutAsync(System.String,JDNetCore.Entity.Test)">
            <summary>
            全量更新
            </summary>
            <param name="id">主键</param>
            <param name="data">更新对象</param>
            <returns></returns>
        </member>
        <member name="T:JDNetCore.ApiSite.AccountController">
            <summary>
            账户和Token相关
            </summary>
        </member>
        <member name="M:JDNetCore.ApiSite.AccountController.GetTestToken">
            <summary>
            获取测试Token admin / Ww123123
            </summary>
            <returns></returns>
        </member>
        <member name="M:JDNetCore.ApiSite.AccountController.GetClaims">
            <summary>
            获取用户Claims
            </summary>
            <returns></returns>
        </member>
        <member name="M:JDNetCore.ApiSite.AccountController.SignIn(System.String,System.String)">
            <summary>
            登陆
            </summary>
            <param name="id">用户米/电话/邮箱</param>
            <param name="pwd">密码</param>
            <returns></returns>
        </member>
        <member name="T:JDNetCore.ApiSite.Controllers.CodeRepositoryAndServiceController">
            <summary>
            结构产生器
            </summary>
        </member>
        <member name="M:JDNetCore.ApiSite.Controllers.CodeRepositoryAndServiceController.GetController(JDNetCore.Model.VO.In.ControllerIniter)">
            <summary>
            创建控制器
            </summary>
            <returns></returns>
        </member>
        <member name="T:JDNetCore.ApiSite.Interface.IRestfull`2">
            <summary>
            Restfull风格的接口定式
            </summary>
            <typeparam name="DTO">传输模型</typeparam>
            <typeparam name="CQM">查询模型</typeparam>
        </member>
        <member name="T:JDNetCore.ApiSite.Interface.IRestfullAsync`2">
            <summary>
            Restfull风格的接口定式(Task)
            </summary>
            <typeparam name="DTO">传输模型</typeparam>
            <typeparam name="CQM">查询模型</typeparam>
        </member>
        <member name="M:JDNetCore.ApiSite.Program.Main(System.String[])">
            <summary>
            Application_Start Part 1 Main
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:JDNetCore.ApiSite.Program.CreateHostBuilder(System.String[])">
            <summary>
            Application_Start Part 2 CreateHostBuilder
            </summary>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="T:JDNetCore.ApiSite.Startup">
            <summary>
            起点
            </summary>
        </member>
        <member name="M:JDNetCore.ApiSite.Startup.#ctor(Microsoft.Extensions.Configuration.IConfiguration,Microsoft.AspNetCore.Hosting.IWebHostEnvironment)">
            <summary>
            
            </summary>
            <param name="configuration"></param>
            <param name="env"></param>
        </member>
        <member name="M:JDNetCore.ApiSite.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            This method gets called by the runtime. Use this method to add services to the container.
            </summary>
            <param name="services"></param>
            <param name="hangfire"></param>
        </member>
        <member name="M:JDNetCore.ApiSite.Startup.ConfigureContainer(Autofac.ContainerBuilder)">
            <summary>
            
            </summary>
            <param name="builder"></param>
        </member>
        <member name="M:JDNetCore.ApiSite.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IWebHostEnvironment,System.IServiceProvider,Microsoft.Extensions.Hosting.IHostApplicationLifetime)">
            <summary>
            This method gets called by the runtime. Use this method to configure the HTTP request pipeline.
            </summary>
            <param name="app"></param>
            <param name="env"></param>
            <param name="provider"></param>
            <param name="applicationLeftTime"></param>
        </member>
    </members>
</doc>
